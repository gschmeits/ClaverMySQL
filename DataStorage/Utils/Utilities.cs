using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;

namespace DataStorage
{
    public static class Utilities
    {
        /// <summary>
        /// Initializes static members of the <see cref="Utilities" /> class.
        /// </summary>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for #ctor
        static Utilities()
        {
            //
            // TODO: Add constructor logic here
            //
        }

        public static DateTime dhLastDayInMonth(DateTime datum = default(DateTime))
        {
            Int32 jaar = datum.Year;
            Int32 maand = datum.Month;
            var aantalDagen = Convert.ToDateTime(jaar + "-" + maand + "-" + DateTime.DaysInMonth(jaar, maand));
            return aantalDagen;
        }

        /// <summary>
        /// Logs the error.
        /// </summary>
        /// <param name="ex">The ex.</param>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for LogError
        public static void LogError(Exception ex)
        {
#if DEBUG
            // get the current date and time
            string dateTime = DateTime.Now.ToLongDateString() + ", at " + DateTime.Now.ToShortTimeString();
            // stores the error message
            string errorMessage = "Exception generated on " + dateTime;
            // obtain the page that generated the errorb
            //errorMessage += "\n\n Window location: " + context.Request.RawUrl;
            // build the error message
            errorMessage += "\n\n Message: " + ex.Message;
            errorMessage += "\n\n Source: " + ex.Source;
            errorMessage += "\n\n Method: " + ex.TargetSite;
            errorMessage += "\n\n Stack Trace: \n\n" + ex.StackTrace;
            errorMessage += "\n\n ErrorNumber: " + ex.Data.ToString();
            errorMessage += "Errornumber: " + ex.Data.ToString();
            MessageBox.Show(errorMessage);
#endif
#if RELEASE
// get the current date and time
			string dateTime = DateTime.Now.ToLongDateString() + ", at "
												 + DateTime.Now.ToShortTimeString();
			// stores the error message
			string errorMessage = "Exception generated on " + dateTime;
			// obtain the page that generated the error
			//errorMessage += "\n\n Window location: " + context.Request.RawUrl;
			// build the error message
			errorMessage += "\n\n Message: " + ex.Message;
			errorMessage += "\n\n Source: " + ex.Source;
			errorMessage += "\n\n Method: " + ex.TargetSite;
			errorMessage += "\n\n Stack Trace: \n\n" + ex.StackTrace;
			errorMessage += "\n\n ErrorNumber: " + ex.Data.ToString();
			errorMessage += "Errornumber: " + ex.Data.ToString();
			MessageBox.Show(errorMessage);
			//var frmMelding = new frm_018_Melding();
			//frmMelding.Show();
#endif

        }
    }
}
